#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

'''
    PyKI - PKI openssl for managing TLS certificates
    Copyright (C) 2016 MAIBACH ALAIN

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    Contact: alain.maibach@gmail.com / 34 rue appienne 13480 - FRANCE.
'''
import argparse

from sys import argv
import os
from PyKI import PyKInit


def argCommandline(argv):
    """
    Manage cli script args
    """
    parser = argparse.ArgumentParser(
        description='Extract files from PKCS12 archive.')
    parser.add_argument(
        "-d",
        "--dest-dir",
        action="store",
        dest="dstdata",
        type=str,
        help=u"Files destination directory",
        metavar='/dest/for/files/',
        required=True)
    parser.add_argument(
        "-f",
        "--file-path",
        action="store",
        dest="pkcsfile",
        type=str,
        help=u"PKCS12 file path",
        metavar='/path/to/pkcs12/file',
        required=True)
    parser.add_argument(
        "-s",
        "--pkcs12-pwd",
        action='store',
        dest="pkcspw",
        type=str,
        default=False,
        help=u"PKCS12 file password",
        metavar='mypkcs12passwd',
        required=True)
    parser.add_argument(
        "-v",
        "--verbose",
        action='store_true',
        dest='mainVerbosity',
        help=u"Add output verbosity",
        required=False)

    args = parser.parse_args()
    if len(argv) <= 1:
        parser.print_help()
        exit(1)

    result = vars(args)
    return(result)

if __name__ == '__main__':
    args = argCommandline(argv)

    configFilePath = '/etc/pyki-config.ini'

    pyki = PyKInit.PyKIsetup(configFilePath)
    pki = pyki.pki
    if not pki:
        print("ERROR: Errors found during init")
        exit(1)
    pki.set_verbosity(args['mainVerbosity'])

    # try to extract ca, cert and key from pkcs12 file
    if args['mainVerbosity']:
        print("INFO: Extract pkcs12 content from file " +
              args['pkcsfile'] + " to " + args['dstdata'] + "...")
    extractres = pki.extract_pkcs12(
        pkcs12file=args['pkcsfile'],
        pkcs12pwd=args['pkcspw'],
        destdir=args['dstdata'])
    print(extractres['message'])

    pki.remove_lockf("INFO: PKI unlocked.")
    del(pki)
    exit(0)
